%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 602.000000 478.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13 (Build 17A405) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 602 478
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 602 478
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: LucidaGrande
%!FontType1-1.0: LucidaGrande 1.0000.6.0040
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
14 dict begin/FontName /LucidaGrande def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /D put
dup 34 /one put
dup 35 /two put
dup 36 /three put
dup 37 /four put
dup 38 /five put
dup 39 /six put
dup 40 /m put
dup 41 /a put
dup 42 /p put
dup 43 /s put
dup 44 /h put
dup 45 /u put
dup 46 /ffl put
dup 47 /e put
dup 48 /r put
dup 49 /d put
dup 50 /c put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -2186 1 index div -1509 2 index div 3361 3 index div 2381 5 -1 roll div]cvx def
/sfnts [<

00000000000008000000000000000400000000000000047B000000000000FFDB00000000FFE70000000000000000FF3B00000000000000000192011700F700C800C300B800AD00A6009C0092008A0080007B00740068005A0050001E003A00000192011700F700E500D200C500B900AD008A0080007B00740068005E0054004A000000000141003E00DE00DE00000000000000000000000005D500190000056600000000000008000000000000000400000000000000043E001800C503C200DE00000000FFE70000000000000000FE00000000000000000000CD00C500AD00A100940088007C0075006F0063003100F700C600B900A0006300C500B300A10088007C0075006F00630056003100F700C600B900C600940082006F0063003E003200190000FF3AFF7EFF9DFFCE0057006F02B3012801830088008800000000000000000000000000000000000000AC008800C501ED006201BC001800DE013E000000000000000000000000000000000000000000000069000000A50073007B00C501ED006201BC0066009D00880064008F0250FFEA05C9001603780016006F04A000190000000000000000000000000000007C00AC00C500960000000000000000000000000085005D006500000000000000000000000000000000000000000000000000000000080000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000005ED01B0009400D200B600AC007B007B007C00000000000000000000000000000000000000B904A000C50063007A005100410087014100DE01280068009D0064007500D2012000DE00D100B40000000000000000000000000000000000000000006100AC00D0006F006F036603660000000000000000000000000000000000000000000000000000004A004A004A000000000000000000000000000000000000000005ED00000000000008000104005C000004000000000000000000000000000000FFDB000000000000000000000000000000000000000000000000003E050300D8011200AD009300D800F700AD00B700790067050300D800920000000000000069000000A50073007B00C501ED006201BC0066009D00880064008F0250FFEA05C9001603780016006F04A000190082006E002A002A002A002A000040405249483C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A090807060504030201002C0118B0184358456AB0194360B00C2344231020B00C4EF04D2FB000121B21231120332F592D2C0118B0184358B0052BB000134BB0145058B100403859B0062B1B21231120332F592D2C0118B01843584EB0032510F221B000124D1B2045B00425B00425234A6164B028

2121591B212121592D2CB00243583DCD181BCD592D2C462346608A8A462320468A608A61B8FF8062232010238AB10C0C8A70456020B0005058B00161B8FFBA8B1BB0468C59B0106068013A2D2C2045B0032546524BB013515B58B0022546206861B00325B003253F2321381B2111592D2C2045B00325465058B0022546206861B00325B003253F2321381B2111592D2C004BB0C8515800B00743B006430B592D2C8A10EC2D2CB00C4358211B2046B0005258B8FFF0381BB0103859592D2C20B0005558B8100063B003254564B00325456461B0005358B0021BB04061B00359254569535845441B2121591B21B0022545B00225456164B028515845441B212159592D2C21210C6423648BB84000622D2C21B08051580C6423648BB82000621BB200402F2B59B002602D2C21B0C051580C6423648BB81555621BB200802F2B59B002602D2C0C6423648BB84000626023212D2C184B5358B00425B00425496423456469B0408B6120B080626AB00225B00225618CB00C2344218A10B00CF6211B218A11231220392F592D2CB00225B002254964B0C05458B8FFF838B008381B2121592D2CB0134358031B02592D2CB0134358021B03592D2CB00A2B2310203CB0172B2D2CB00225B8FFF038B0282B8A102320D023B0102BB0054358C01B3C59201011B00012012D2C4B53234B515A58381B2121592D2C01B0022510D023C901B00113B0001410B0013CB001162D2C01B00013B001B0032549B0031738B001132D2C4B53234B515A5820458A60441B2121592D2C184B5358B00425B004254964B00325B00325496468B0408B6120B080626AB00225B00225618CB00C234421B004251023B00CF61BB00425B0042511122320392F59CC21212D2C0118B0184358B0052546234564611B21B00425B004254A59B00E23442310B00EEC2310B00EEC2D2CB01B435820B0016045B000515820B0016020452068B0005558B0206044211B212121591B20B0016020452068B0005558B8FFE06044B01C4B50582045B02060441B21591B21212159591B21592D2C4B53234B515A58381B2121592D2C4B5458381B2121592D2C4B52587D1B7A592DB800532C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800542C2020456944B001602DB800552CB800542A212DB800562C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800572C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800582C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800592C2020456944B001602020457D691844B001602DB8005A2CB800592A2DB8005B2C4B20B00326





1800650219853F2B2B011A18104DED323210ED003F3FED32323FED32323F5F5E5D5E5D3130015D5D5D5D5D5D71005D715D5D5D5D5D5D715D5D5D715D71715D131133153633321215100223222719011633201110232207C5C579F2C4E1FFD0C180988A011CFCA59DFE7505C9CCE4FEE2F8FEF2FEB594FDFA028E8801B1017EB3000100C50000031D0456000D005B401F470B01490C590C02A90CB90C02070401090C030A079508000A100A022F030AB8FFC040171F23480A950510010F00030D8500400F076A020E0065022B2B011A18104DED32002F3F3FFD2B5F5E5DD6ED11333331305E5D5D71713311331536333217152623220711C5C575DF1E213327BB7E043ECCE405B811DEFD34000001009DFFE7037704560020010140867C0B8C0B02660401281701E61B01F81B01371957199719034A0A011A0A6A0A7A0A8A0AFA0A054C0C5C0C7C0C032C0C7C0C8C0C030A201A2002331C01031C131C231C631C931C05050F150F0209590401A80C01A90EC90ED90E0320281D2048C90B01B620019920010C0CBC0C020A13970014101420140312141697080D181E04001010029703B8FFC040350B1148030597001618860D14400F144814140D0208851E404F1E011E401A2248000240029002A002B002051403221E6802210265022B2B015F5E5D2B5D1A18104DED1239392F2B2FED003FFDD62BED3F121739FDD65E5DED3130015E5D5D5D5D2B5D5D00715E5D5D715D5D715D715D5D5D71715D052227351633323635342F012635343633321F011526232215141F011E0115140601E587C1C18F55709D73FFC9AF5B8629A561BE905FA186E2193FB5605C456542316AC78EA31908A4318A593D284497718FB80000000100B9FFE70431043E0011009C4010B50D017A058A059A0503E20AF20A020AB8FFD0405E1A1D487A0E8A0E02770287029702030A022A023A024A02AA02057A0201DB04EB04020420090D48350D750D850D950D04090D190D02A701010D011D017D018D010409030F070F0E010C950316000E010F85100885074013106802120765022B2B011A18104DED10ED3232002F3FED32323F3331305F5E5D715D712B5D5D71715D2B5D71015D213506232226351133111416333237113311036C9DE08EA8C54753B4A0C5CCE5B398030CFD347A67ED02C0FBC200000200500000071506440028002900AEB013B8FFE0B313164806B8FFE0406313164813081316481413241334130306081316481406240634060317001900232720101A420A1C0C1407250009970A0C97070127019710040F00188510190119192B2516302101212024851110250125252B00A009B0090209302901291028850204002FC0C6FDC0D45DC45D1112392F5DC0FDC0D45DC41112392F5DED002F3FC0FDC03FFDD6ED10C010C010C010E410C010C010C03F31305D
2B5D2B012B2B3311233533351021321715262322061D0121351021321733112311262322061D01211521112311211101EA9A9A0162637E8550614701ED019B5DA9D7C5BE646D5F0110FEF0C5FE13010F03AA94820184219C295D7E976F019719F9D505832D62739D94FC5603AAFC56043E0000000002006FFFE70425062B0022002E00F7B800712BBA0026001A00742BBA000E002C00742BB8000E10B80003DCB8001A10B80014D0B800142FB8000E10B80008D0B800082FBA000500140008111239BA001D00140008111239411B0006002600160026002600260036002600460026005600260066002600760026008600260096002600A6002600B6002600C60026000D5D410500D5002600E5002600025DB8002610B8001FD0B8001F2F410500DA002C00EA002C00025D411B0009002C0019002C0029002C0039002C0049002C0059002C0069002C0079002C0089002C0099002C00A9002C00B9002C00C9002C000D5DB8000E10B80030DC00B800052FBA0029001100742B3031013700353427331615140107171615140423222435343F012726353437330615141617130706151416333236353427023F33010837BF23FED94170F0FEF4D3CAFEFBF33F4AE61FC019587B1340A9A2737099D303D13201009F4049423DD4FEE13F5FCABFBCEFDFACC2E13A38B294364A34273C6A56FEFD3DA0936E9A8A6690A90000010000000601065DF3FBED5F0F3CF5011B080000000000B47FC3BC00000000D56A2B41F776FA1B0D21094D0000000900010000000000000001000007BCFE5000000D1EF776F7430D2100010000000000000000000000000000001406000100050F0134050F00AA050F00D0050F0069050F00F9050F008905FE00BF046B00670419006F0509006F0475006F04F700C5077800C5050900C5034600C50414009D04F700B907DB00500493006F00000020006200FA01B6021202AC035A03DC0494052005C8066806CC076A07FC084208F4096009F60ABA00000001000000140077000F004F0007000100100030007B000005E00D3300030001B800712BB800672BB8005D2BB800532B410E00000246001002460002007F02440001023F023C0001002B023E023CB2012BEFBB023D0001023D023CB2141F00BD023C0010023C000201870188B21A1F40B80189B310163900410E0188001001880002018301850002002B018401850002002B01860185B2022B80BB017F000100DF017C406601DFE016171CD4D516171C7B7C161B0F7B1F7B2F7B037B7C19D1D216171C767716171C6D7016171C6C6F16171C6B6E161B5F6E7F6B026B6E7F721A747514151C676A14151C666914151C6568141B8F65A065D06503656885711A1973167A4319217943192102B90352034AB2022B10BD034600500346000200400339B20B0E39B9FFC00338B20E



00>] def
/CharStrings 20 dict dup begin
/.notdef 0 def
/one 1 def
/two 2 def
/three 3 def
/four 4 def
/five 5 def
/six 6 def
/D 7 def
/a 8 def
/c 9 def
/d 10 def
/e 11 def
/h 12 def
/m 13 def
/p 14 def
/r 15 def
/s 16 def
/u 17 def
/ffl 18 def
/ukcyrillic.alt 19 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-2186 -1509 3361 2381}def
/UniqueID 4261101 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C92626C4DEA81D313B50D8F4EBFA95F2709469CAA9CCEDFB298F70C76D4064066B51A3E7122D87ED0BCF5BEA14A99797A3DD0E61C3753D4E6F673D0655C6CC36F47A025225370B421DF137A522AF37254E9F9DA72E8D5A2CA9229951CD8640D954DA7D9E4E8FD40474E1FC7157BC0958A54E16E2E4954D12EFBB479857EC6D31741460BB465F1FBA95E344B0B661F3128173EC333F9D7EA897C9BCE76735585ACF10EB280459393F7E284024B209EDA0081095C122DE44B30C606D65ADEAAD447613773E0909EB213056FA14F59E5601171889452C7F8B45BAE1518BA2F1E458A9C2AC17F6074DBBE60B955426F53500FFF842B16826AAEFE1CD58CEAF78E0ED5D323359303D4D943F6B3AB9C7AD72BD510B0D0A0E45CA30C5B2FB067D07AC258F4C72167D4D9625F3BEA4F03256FA9A5F6E6CC0F0E67BE8E175297BC42F07CB249FC705D3004435C59E80D05CC55B9A69D022699DCCF3736F91099E5764F09A2C4165B4D7DD6C18A01FFD2E75C126E80938AA1D053D51C136ED01075E4EC183E4A488F84170B68CC705509B9A1D93C07CDFAF7DD1BB8F23C9BCF04BD5BF649C359A14846939886EE524365C882BD2EB1E4851728A45450347FCFCE5BC9F2D4C35FA2EAD3199EDD4188898413ADD391DC218CCAE7478BF7ED477B7D5C0BF9CD2E6ED63EF23AE0FA46DA605AD8CBAB93C4E3D54A8611C010FACE45242CD2B06F7EE2D621E807CD033EC35B3B2EE6BC3539AAEA79F832B07655E827C5D39A10C82223
AE3222F33166215AAE8B8ADF4796BB110EC74D5DC4388782676703E6A2C9704820AD75D549767732A8DBBAAA54BBFB9D5EA52B73587ECB515E24E0C1F0D8F0382473EC92FB7E2F14C7BEEB310D7995F59277AD7860AF855673079871DE862FCA6F136E5CABD35B6FF8D4F468019CEAAD71D854A1A533B4C689358FEA0ADBB7E97159AFB496E40D1D4E6E944CC850CC6D80878186334A29C0F83B57DD3107E2D7544D6762A324EAF7BD682803F362770CEFEF5EEFD91D180C938A556186E2DAC9BFDE7463DBA0958405FB61E320DC5CFCBD85B1C0E534EA3BD247022E684E46B7B3D23716A580F69DE9FBC1400C3783CA26EB037A063B003ACC01DAF1DA341B8C7E379A7EDD497A18D33048C22ED210B5D21882FB2B879561C32C969EF4D8790602D91B7F58E7002E9871F9A2552A6B1DE6286B09977DD4858884499575C4E38A7B4AA9E26D5DE6AD31CE04DA499AABAA623C8AD3487D81676A0F008CC10085F379168DA8AE1786AB013AF7039D14E79C0890E25BC35F6CD1726382EFE83D9EA42DD46F1FC7E1A836ECE002F3955D03171A43D06A87CCE506AE7BCA4E48B9B0AE2858927E87A7CB94F990063ED6A034EE60296889AA2BAF720AA1C7873622B3F4B716A3B764552D666E7838D4AAF49FB86F51159CF302428FB82B2EC5BAE429445F552AA5EF6CBCD1FAA37A27A7D97090C2FC54F248835FE69E96AF3B67F8282BCC778AA9B7201C4ED6A7A201223CEA2F752247D51A42847848FEFF60A651A4F13FEF3BC2B108C351473E330997E8E849DB1137F4DC72D85F80DD871256652AD0080C126AECE09A8D955B973CACC9C2C00E228A2C9574DF372F6EDDE14E2EEEB1EDAC20CCAFB551B84585F59F6234E066DD43CFD61676A0FA80173050602E339A62C759BC98DC5A20A74FCC0213ABC65FEE58B0F30BA33EFB553BCC3F97ED678726CE29EDBF00754924CC7F538DADAF839C119D382B976AB5B357DAF434B7184D3CFA7313524B943A83984FCC31AD0335E55E1F6035FE4BCC3E87B1DA7943013CC462144FA0996C2D92A63095B109E143B877114ADA36B5E88B50BB6787BDFE234C2228FA1D4F070E1FE3428AB4721A8317BABCB291C508F16B406402CF53699D9D20F1C6BC9B10DA4C5C7C3AD201FAECC36F33A6BAD9216BEBE3E11AE7B109472C51C4EFBD910FB96B066FB1FACABE001D5A26A64F8BECC825B25B2AA503643555417D58AB0A5C0742F0E36790403266415AF8E0FF50C5002620F55DA7EBAABCB93989B4DD8B22F177942FD17E96C87A5F30757134379DD9FE522FAA29D201F96ACC24565C446EE55FEAFBD0C33A34884FCA2BBD4682857FABA60ED4D76CA5B29F47D1A701C4E9611945F332DA8B6A81A64EA2B295E175B972F089B06342225A5AB0D425BA46ABE199E588221CDBA7BB871E3989C8F0D0585440E4D0516600DD

67B56DC572A5311705C3881060555ECFDBBB2365A7FD838993564EADF6B6E276340952510AE02AF28C925C9B31D56B776DDF127618E8241E4891EA75DF870CD5547794BD926ECAB2E08301BB84934B12140FD9880EA2738BA924B063C878D2AE0FB8B21D191157FFC84D85E8CD83A216FD28A232B29A7779AE69A26ED997786A674F04D0EA1C91545147D5C144E9838C2D18F0BA93322CAB70B94B9C69D593809BCCB2D3FE80C4B8FD8DD3FC4341372BB9D830913F5E2985868F25B7A67740587D2607621B6C013DC900C1F81FB0EF894139300EFFDBE60080E0C6738AF1C9D1B05804E7F4F19BF4DAC8408848014361D5FCCC33FF0048E71995A8132BD84C96C02BD09EE048B5822B59FC35EBDFFD211CFEBF4CB00EACA8258452F7F5615708BCF8799D99C6FD8B21A9A040381235D4E34C71873FF6E2F595558EDACCBFAE8894A17DF7CBC6587A4ABBAA1FAD6A8C77DE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/LucidaGrande cguidfix
/F1.1/LucidaGrande renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.75 0.75 1 sc
q
0 0 602 478 rc
105.5 477 m
163.5 477 l
163.5 419 l
105.5 419 l
h
105.5 477 m
f
2 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
280 179 m
338 179 l
338 237 l
280 237 l
h
280 179 m
S
0 i
0.75 0.75 1 sc
CM
193 477 m
251 477 l
251 419 l
193 419 l
h
193 477 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
367.5 179 m
425.5 179 l
425.5 237 l
367.5 237 l
h
367.5 179 m
S
0 i
0.75 0.75 1 sc
CM
280.5 477 m
338.5 477 l
338.5 419 l
280.5 419 l
h
280.5 477 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
455 179 m
513 179 l
513 237 l
455 237 l
h
455 179 m
S
0 i
0.75 0.75 1 sc
CM
368 477 m
426 477 l
426 419 l
368 419 l
h
368 477 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
542.5 179 m
600.5 179 l
600.5 237 l
542.5 237 l
h
542.5 179 m
S
0 i
0.75 0.75 1 sc
CM
455.5 477 m
513.5 477 l
513.5 419 l
455.5 419 l
h
455.5 477 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
630 179 m
688 179 l
688 237 l
630 237 l
h
630 179 m
S
0 i
0.75 0.75 1 sc
CM
543 477 m
601 477 l
601 419 l
543 419 l
h
543 477 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
717.5 179 m
775.5 179 l
775.5 237 l
717.5 237 l
h
717.5 179 m
S
1 1 1 sc
0 i
1 0 0 -1 129.75 452.25 cm
/F1.1[ 25 0 0 -25 0 0]sf
-9.362793 9.5 m
(!)s
1 0 0 -1 143.25 438.25 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.0585938 6 m
(")s
1 0 0 -1 217.25 452.25 cm
/F1.1[ 25 0 0 -25 0 0]sf
-9.362793 9.5 m
(!)s
1 0 0 -1 230.75 438.25 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.0585938 6 m
(#)s
1 0 0 -1 304.75 452.25 cm
/F1.1[ 25 0 0 -25 0 0]sf
-9.362793 9.5 m
(!)s
1 0 0 -1 318.25 438.25 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.0585938 6 m
($)s
1 0 0 -1 392.25 452.25 cm
/F1.1[ 25 0 0 -25 0 0]sf
-9.362793 9.5 m
(!)s
1 0 0 -1 405.75 438.25 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.0585938 6 m
(%)s
1 0 0 -1 479.75 452.25 cm
/F1.1[ 25 0 0 -25 0 0]sf
-9.362793 9.5 m
(!)s
1 0 0 -1 493.25 438.25 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.0585938 6 m
(&)s
1 0 0 -1 567.25 452.25 cm
/F1.1[ 25 0 0 -25 0 0]sf
-9.362793 9.5 m
(!)s
1 0 0 -1 580.75 438.25 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.0585938 6 m
(')s
0.5 0.5 1 sc
CM
105.5 340.5 m
163.5 340.5 l
163.5 282.5 l
105.5 282.5 l
h
105.5 340.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
280 315.5 m
338 315.5 l
338 373.5 l
280 373.5 l
h
280 315.5 m
S
0 i
0.5 0.5 1 sc
CM
193 340.5 m
251 340.5 l
251 282.5 l
193 282.5 l
h
193 340.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
367.5 315.5 m
425.5 315.5 l
425.5 373.5 l
367.5 373.5 l
h
367.5 315.5 m
S
0 i
0.5 0.5 1 sc
CM
280.5 340.5 m
338.5 340.5 l
338.5 282.5 l
280.5 282.5 l
h
280.5 340.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
455 315.5 m
513 315.5 l
513 373.5 l
455 373.5 l
h
455 315.5 m
S
0 i
0.5 0.5 1 sc
CM
368 340.5 m
426 340.5 l
426 282.5 l
368 282.5 l
h
368 340.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
542.5 315.5 m
600.5 315.5 l
600.5 373.5 l
542.5 373.5 l
h
542.5 315.5 m
S
0 i
0.5 0.5 1 sc
CM
455.5 340.5 m
513.5 340.5 l
513.5 282.5 l
455.5 282.5 l
h
455.5 340.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
630 315.5 m
688 315.5 l
688 373.5 l
630 373.5 l
h
630 315.5 m
S
0 i
0.5 0.5 1 sc
CM
543 340.5 m
601 340.5 l
601 282.5 l
543 282.5 l
h
543 340.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
717.5 315.5 m
775.5 315.5 l
775.5 373.5 l
717.5 373.5 l
h
717.5 315.5 m
S
1 1 1 sc
0 i
1 0 0 -1 129.75 315.75 cm
/F1.1[ 25 0 0 -25 0 0]sf
-9.362793 9.5 m
(!)s
1 0 0 -1 143.25 301.75 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.0585938 6 m
(")s
1 0 0 -1 217.25 315.75 cm
/F1.1[ 25 0 0 -25 0 0]sf
-9.362793 9.5 m
(!)s
1 0 0 -1 230.75 301.75 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.0585938 6 m
(#)s
1 0 0 -1 304.75 315.75 cm
/F1.1[ 25 0 0 -25 0 0]sf
-9.362793 9.5 m
(!)s
1 0 0 -1 318.25 301.75 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.0585938 6 m
($)s
1 0 0 -1 392.25 315.75 cm
/F1.1[ 25 0 0 -25 0 0]sf
-9.362793 9.5 m
(!)s
1 0 0 -1 405.75 301.75 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.0585938 6 m
(%)s
1 0 0 -1 479.75 315.75 cm
/F1.1[ 25 0 0 -25 0 0]sf
-9.362793 9.5 m
(!)s
1 0 0 -1 493.25 301.75 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.0585938 6 m
(&)s
1 0 0 -1 567.25 315.75 cm
/F1.1[ 25 0 0 -25 0 0]sf
-9.362793 9.5 m
(!)s
1 0 0 -1 580.75 301.75 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.0585938 6 m
(')s
1 w
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
309 237.5 m
309 305.10001 l
S
0 i
CM
134.5 342.89999 m
137.5 350.89999 l
131.5 350.89999 l
h
134.5 342.89999 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
309 313.10001 m
312 305.10001 l
306 305.10001 l
h
309 313.10001 m
S
1 J
1 j
0.60000002 i
396.5 237.5 m
396.5 305.10001 l
S
0 i
CM
222 342.89999 m
225 350.89999 l
219 350.89999 l
h
222 342.89999 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
396.5 313.10001 m
399.5 305.10001 l
393.5 305.10001 l
h
396.5 313.10001 m
S
1 J
1 j
0.60000002 i
484 237.5 m
484 305.10001 l
S
0 i
CM
309.5 342.89999 m
312.5 350.89999 l
306.5 350.89999 l
h
309.5 342.89999 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
484 313.10001 m
487 305.10001 l
481 305.10001 l
h
484 313.10001 m
S
1 J
1 j
0.60000002 i
571.5 237.5 m
571.5 305.10001 l
S
0 i
CM
397 342.89999 m
400 350.89999 l
394 350.89999 l
h
397 342.89999 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
571.5 313.10001 m
574.5 305.10001 l
568.5 305.10001 l
h
571.5 313.10001 m
S
1 J
1 j
0.60000002 i
659 237.5 m
659 305.10001 l
S
0 i
CM
484.5 342.89999 m
487.5 350.89999 l
481.5 350.89999 l
h
484.5 342.89999 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
659 313.10001 m
662 305.10001 l
656 305.10001 l
h
659 313.10001 m
S
1 J
1 j
0.60000002 i
746.5 237.5 m
746.5 305.10001 l
S
0 i
CM
572 342.89999 m
575 350.89999 l
569 350.89999 l
h
572 342.89999 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
746.5 313.10001 m
749.5 305.10001 l
743.5 305.10001 l
h
746.5 313.10001 m
S
/Cs2 SC
0 sc
1 0 0 -1 31.5 383 cm
/F1.1[ 25 0 0 -25 0 0]sf
-26.44043 9.5 m
(\(\)*)[ 23.339844 13.806152 0.000000 ] xS
/Cs1 SC
1 0.5 0.5 sc
CM
105.5 199.75 m
163.5 199.75 l
163.5 141.75 l
105.5 141.75 l
h
105.5 199.75 m
f
2 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
280 456.25 m
338 456.25 l
338 514.25 l
280 514.25 l
h
280 456.25 m
S
0 i
1 0.5 0.5 sc
CM
193 199.75 m
251 199.75 l
251 141.75 l
193 141.75 l
h
193 199.75 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
367.5 456.25 m
425.5 456.25 l
425.5 514.25 l
367.5 514.25 l
h
367.5 456.25 m
S
0 i
1 0.5 0.5 sc
CM
280.5 199.75 m
338.5 199.75 l
338.5 141.75 l
280.5 141.75 l
h
280.5 199.75 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
455 456.25 m
513 456.25 l
513 514.25 l
455 514.25 l
h
455 456.25 m
S
0 i
1 0.5 0.5 sc
CM
368 199.75 m
426 199.75 l
426 141.75 l
368 141.75 l
h
368 199.75 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
542.5 456.25 m
600.5 456.25 l
600.5 514.25 l
542.5 514.25 l
h
542.5 456.25 m
S
0 i
1 0.5 0.5 sc
CM
455.5 199.75 m
513.5 199.75 l
513.5 141.75 l
455.5 141.75 l
h
455.5 199.75 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
630 456.25 m
688 456.25 l
688 514.25 l
630 514.25 l
h
630 456.25 m
S
0 i
1 0.5 0.5 sc
CM
543 199.75 m
601 199.75 l
601 141.75 l
543 141.75 l
h
543 199.75 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
717.5 456.25 m
775.5 456.25 l
775.5 514.25 l
717.5 514.25 l
h
717.5 456.25 m
S
1 1 1 sc
0 i
1 0 0 -1 129.75 175 cm
-9.362793 9.5 m
(!)s
1 0 0 -1 143.25 161 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.0585938 6 m
(")s
1 0 0 -1 217.25 175 cm
/F1.1[ 25 0 0 -25 0 0]sf
-9.362793 9.5 m
(!)s
1 0 0 -1 230.75 161 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.0585938 6 m
(#)s
1 0 0 -1 304.75 175 cm
/F1.1[ 25 0 0 -25 0 0]sf
-9.362793 9.5 m
(!)s
1 0 0 -1 318.25 161 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.0585938 6 m
($)s
1 0 0 -1 392.25 175 cm
/F1.1[ 25 0 0 -25 0 0]sf
-9.362793 9.5 m
(!)s
1 0 0 -1 405.75 161 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.0585938 6 m
(%)s
1 0 0 -1 479.75 175 cm
/F1.1[ 25 0 0 -25 0 0]sf
-9.362793 9.5 m
(!)s
1 0 0 -1 493.25 161 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.0585938 6 m
(&)s
1 0 0 -1 567.25 175 cm
/F1.1[ 25 0 0 -25 0 0]sf
-9.362793 9.5 m
(!)s
1 0 0 -1 580.75 161 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.0585938 6 m
(')s
1 w
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
309 374 m
309 445.85001 l
S
0 i
CM
134.5 202.14999 m
137.5 210.14999 l
131.5 210.14999 l
h
134.5 202.14999 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
309 453.85001 m
312 445.85001 l
306 445.85001 l
h
309 453.85001 m
S
1 J
1 j
0.60000002 i
396.5 374 m
396.5 445.85001 l
S
0 i
CM
222 202.14999 m
225 210.14999 l
219 210.14999 l
h
222 202.14999 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
396.5 453.85001 m
399.5 445.85001 l
393.5 445.85001 l
h
396.5 453.85001 m
S
1 J
1 j
0.60000002 i
484.16132 374 m
484.55698 446.35016 l
S
0 i
CM
310.10071 201.64998 m
313.05692 209.66626 l
307.05701 209.63345 l
h
310.10071 201.64998 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
484.60071 454.35004 m
487.55692 446.33374 l
481.55701 446.36655 l
h
484.60071 454.35004 m
S
1 J
1 j
0.60000002 i
571.5 374 m
571.5 445.85001 l
S
0 i
CM
397 202.14999 m
400 210.14999 l
394 210.14999 l
h
397 202.14999 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
571.5 453.85001 m
574.5 445.85001 l
568.5 445.85001 l
h
571.5 453.85001 m
S
1 J
1 j
0.60000002 i
659 374 m
659 445.85001 l
S
0 i
CM
484.5 202.14999 m
487.5 210.14999 l
481.5 210.14999 l
h
484.5 202.14999 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
659 453.85001 m
662 445.85001 l
656 445.85001 l
h
659 453.85001 m
S
1 J
1 j
0.60000002 i
746.5 374 m
746.5 445.85001 l
S
0 i
CM
572 202.14999 m
575 210.14999 l
569 210.14999 l
h
572 202.14999 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
746.5 453.85001 m
749.5 445.85001 l
743.5 445.85001 l
h
746.5 453.85001 m
S
1 J
1 j
0.60000002 i
396.5 374.21451 m
315.74936 449.49902 l
S
0 i
CM
135.39792 201.04564 m
143.2951 204.3067 l
139.2036 208.69527 l
h
135.39792 201.04564 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
309.89792 454.95435 m
317.7951 451.6933 l
313.70358 447.30472 l
h
309.89792 454.95435 m
S
1 J
1 j
0.60000002 i
484.16251 374.21582 m
317.47821 452.06082 l
S
0 i
CM
135.72972 200.55399 m
144.24765 201.22099 l
141.70876 206.65735 l
h
135.72972 200.55399 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
310.22971 455.44601 m
318.74765 454.77902 l
316.20874 449.34265 l
h
310.22971 455.44601 m
S
1 J
1 j
0.60000002 i
571.5 374.5 m
317.96201 453.31131 l
S
0 i
CM
135.82257 200.314 m
144.35249 199.82388 l
142.57149 205.55347 l
h
135.82257 200.314 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
310.32257 455.686 m
318.85251 456.17612 l
317.07147 450.44653 l
h
310.32257 455.686 m
S
1 J
1 j
0.60000002 i
659 374.5 m
318.14941 454.00125 l
S
0 i
CM
135.85854 200.18158 m
144.33086 199.07718 l
142.96799 204.92033 l
h
135.85854 200.18158 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
310.35855 455.81842 m
318.83087 456.92282 l
317.46799 451.07965 l
h
310.35855 455.81842 m
S
1 J
1 j
0.60000002 i
309 374.5 m
390.1846 449.53064 l
S
0 i
CM
221.55974 201.03958 m
217.72076 208.67255 l
213.64841 204.26619 l
h
221.55974 201.03958 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
396.05972 454.96042 m
392.22076 447.32745 l
388.14841 451.7338 l
h
396.05972 454.96042 m
S
1 J
1 j
0.60000002 i
396.5 374.68988 m
477.35736 449.52542 l
S
0 i
CM
308.72864 201.04057 m
304.89511 208.6763 l
300.81961 204.27286 l
h
308.72864 201.04057 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
483.22864 454.95941 m
479.39511 447.3237 l
475.31961 451.72714 l
h
483.22864 454.95941 m
S
1 J
1 j
0.60000002 i
396.5 375 m
563.5116 452.10052 l
S
0 i
CM
396.27496 200.54637 m
390.26898 206.62325 l
387.75415 201.17572 l
h
396.27496 200.54637 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
570.77496 455.45364 m
564.76898 449.37674 l
562.25415 454.82428 l
h
570.77496 455.45364 m
S
1 J
1 j
0.60000002 i
396.5 374.5 m
649.13116 453.30203 l
S
0 i
CM
482.26822 200.31577 m
475.52444 205.56187 l
473.73782 199.83406 l
h
482.26822 200.31577 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
656.76825 455.68423 m
650.02448 450.43811 l
648.23779 456.16592 l
h
656.76825 455.68423 m
S
1 J
1 j
0.60000002 i
309 374.10168 m
475.65558 452.05542 l
S
0 i
CM
308.40201 200.55502 m
302.42667 206.66199 l
299.88449 201.22716 l
h
308.40201 200.55502 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
482.90201 455.44498 m
476.92667 449.33801 l
474.38449 454.77286 l
h
482.90201 455.44498 m
S
1 J
1 j
0.60000002 i
309 374.01065 m
563.04956 453.30048 l
S
0 i
CM
396.18628 200.31607 m
389.44336 205.56328 l
387.65579 199.83575 l
h
396.18628 200.31607 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
570.68628 455.68393 m
563.94336 450.43674 l
562.15576 456.16425 l
h
570.68628 455.68393 m
S
1 J
1 j
0.60000002 i
309 374.38889 m
650.05273 453.99957 l
S
0 i
CM
483.34332 200.1819 m
476.23468 204.92189 l
474.87079 199.07896 l
h
483.34332 200.1819 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
657.84332 455.81812 m
650.73468 451.07812 l
649.37079 456.92105 l
h
657.84332 455.81812 m
S
1 J
1 j
0.60000002 i
396.5 374.38889 m
737.7478 454.00076 l
S
0 i
CM
571.03857 200.18167 m
563.92938 204.92078 l
562.56622 199.07768 l
h
571.03857 200.18167 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
745.53857 455.81833 m
738.42938 451.07922 l
737.06622 456.9223 l
h
745.53857 455.81833 m
S
1 J
1 j
0.60000002 i
484.16498 374.67075 m
404.64569 449.46707 l
S
0 i
CM
224.31844 201.05177 m
232.20113 204.3477 l
228.09026 208.71815 l
h
224.31844 201.05177 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
398.81845 454.94821 m
406.70114 451.65228 l
402.59027 447.28186 l
h
398.81845 454.94821 m
S
1 J
1 j
0.60000002 i
484.16193 374.11179 m
565.24988 449.5087 l
S
0 i
CM
396.60855 201.04379 m
392.79266 208.68832 l
388.70703 204.2943 l
h
396.60855 201.04379 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
571.10858 454.95621 m
567.29266 447.31168 l
563.20703 451.70569 l
h
571.10858 454.95621 m
S
1 J
1 j
0.60000002 i
484.16193 374.11179 m
650.72675 452.05408 l
S
0 i
CM
483.47266 200.55528 m
477.49823 206.66316 l
474.95526 201.22871 l
h
483.47266 200.55528 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
657.97266 455.44473 m
651.99823 449.33685 l
649.45526 454.77127 l
h
657.97266 455.44473 m
S
1 J
1 j
0.60000002 i
484.16193 374.11179 m
738.11353 453.3028 l
S
0 i
CM
571.25079 200.31563 m
564.50659 205.56117 l
562.72046 199.83322 l
h
571.25079 200.31563 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
745.75079 455.68439 m
739.00659 450.43881 l
737.22046 456.16678 l
h
745.75079 455.68439 m
S
1 J
1 j
0.60000002 i
571.5 374.38889 m
407.09619 452.02271 l
S
0 i
CM
225.36218 200.56129 m
233.87718 201.26454 l
231.31519 206.69006 l
h
225.36218 200.56129 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
399.86218 455.43869 m
408.3772 454.73544 l
405.81519 449.30994 l
h
399.86218 455.43869 m
S
1 J
1 j
0.60000002 i
571.5 374.38889 m
491.82831 449.46072 l
S
0 i
CM
311.50589 201.05299 m
319.38565 204.35585 l
315.27097 208.72269 l
h
311.50589 201.05299 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
486.00589 454.94702 m
493.88565 451.64413 l
489.77097 447.27731 l
h
486.00589 454.94702 m
S
1 J
1 j
0.60000002 i
571.5 374.38889 m
653.33551 449.55313 l
S
0 i
CM
484.72742 201.03525 m
480.86484 208.65633 l
476.80615 204.2374 l
h
484.72742 201.03525 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
659.22742 454.96475 m
655.36487 447.34369 l
651.30615 451.7626 l
h
659.22742 454.96475 m
S
1 J
1 j
0.60000002 i
571.5 374.38889 m
738.58759 452.07611 l
S
0 i
CM
571.3418 200.55106 m
565.35236 206.64424 l
562.82275 201.20357 l
h
571.3418 200.55106 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
745.8418 455.44894 m
739.85236 449.35577 l
737.32275 454.79645 l
h
745.8418 455.44894 m
S
1 J
1 j
0.60000002 i
659 374.38889 m
406.88257 453.29306 l
S
0 i
CM
224.74773 200.31749 m
233.27859 199.84387 l
231.48653 205.56999 l
h
224.74773 200.31749 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
399.24774 455.6825 m
407.77859 456.15613 l
405.98651 450.42999 l
h
399.24774 455.6825 m
S
1 J
1 j
0.60000002 i
659 374.38889 m
493.58469 452.04297 l
S
0 i
CM
311.84296 200.5574 m
320.35953 201.24138 l
317.80981 206.67268 l
h
311.84296 200.5574 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
486.34296 455.4426 m
494.85953 454.75861 l
492.30981 449.32733 l
h
486.34296 455.4426 m
S
1 J
1 j
0.60000002 i
659 374.38889 m
579.69049 449.4451 l
S
0 i
CM
399.38 201.05598 m
407.25259 204.37595 l
403.12842 208.73384 l
h
399.38 201.05598 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
573.88 454.944 m
581.75262 451.62405 l
577.62842 447.26617 l
h
573.88 454.944 m
S
1 J
1 j
0.60000002 i
659 374.38889 m
740.29456 449.53018 l
S
0 i
CM
571.66937 201.03966 m
567.83087 208.67287 l
563.7583 204.26675 l
h
571.66937 201.03966 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
746.16937 454.96033 m
742.33087 447.32715 l
738.2583 451.73325 l
h
746.16937 454.96033 m
S
1 J
1 j
0.60000002 i
746.5 374.38889 m
667.79248 449.41904 l
S
0 i
CM
487.50198 201.06099 m
495.36249 204.40952 l
491.2225 208.7524 l
h
487.50198 201.06099 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
662.00195 454.939 m
669.86249 451.59048 l
665.72247 447.24759 l
h
662.00195 454.939 m
S
1 J
1 j
0.60000002 i
746.5 374.38889 m
581.45813 452.03549 l
S
0 i
CM
399.71924 200.55884 m
408.23526 201.24991 l
405.681 206.67908 l
h
399.71924 200.55884 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
574.21924 455.44116 m
582.73523 454.75009 l
580.18103 449.32092 l
h
574.21924 455.44116 m
S
1 J
1 j
0.60000002 i
746.5 374.38889 m
494.07214 453.29626 l
S
0 i
CM
311.93652 200.31688 m
320.46722 199.84036 l
318.67706 205.56709 l
h
311.93652 200.31688 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
486.43652 455.68314 m
494.96722 456.15964 l
493.17706 450.43289 l
h
486.43652 455.68314 m
S
1 J
1 j
0.60000002 i
746.5 374.11111 m
407.77985 453.978 l
S
0 i
CM
225.49338 200.18605 m
233.96835 199.1021 l
232.59137 204.94194 l
h
225.49338 200.18605 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
399.99338 455.81396 m
408.46835 456.89792 l
407.09137 451.05804 l
h
399.99338 455.81396 m
S
1 J
1 j
0.60000002 i
746.5 374.11111 m
318.23859 454.4252 l
S
0 i
CM
135.87564 200.1002 m
144.29153 198.62619 l
143.18561 204.52339 l
h
135.87564 200.1002 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
310.37564 455.89978 m
318.79153 457.37381 l
317.68561 451.47662 l
h
310.37564 455.89978 m
S
1 0.25 0.25 sc
CM
105.5 59 m
163.5 59 l
163.5 1 l
105.5 1 l
h
105.5 59 m
f
2 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
280 597 m
338 597 l
338 655 l
280 655 l
h
280 597 m
S
0 i
1 0.25 0.25 sc
CM
193 59 m
251 59 l
251 1 l
193 1 l
h
193 59 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
367.5 597 m
425.5 597 l
425.5 655 l
367.5 655 l
h
367.5 597 m
S
0 i
1 0.25 0.25 sc
CM
280.5 59 m
338.5 59 l
338.5 1 l
280.5 1 l
h
280.5 59 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
455 597 m
513 597 l
513 655 l
455 655 l
h
455 597 m
S
0 i
1 0.25 0.25 sc
CM
368 59 m
426 59 l
426 1 l
368 1 l
h
368 59 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
542.5 597 m
600.5 597 l
600.5 655 l
542.5 655 l
h
542.5 597 m
S
0 i
1 0.25 0.25 sc
CM
455.5 59 m
513.5 59 l
513.5 1 l
455.5 1 l
h
455.5 59 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
630 597 m
688 597 l
688 655 l
630 655 l
h
630 597 m
S
0 i
1 0.25 0.25 sc
CM
543 59 m
601 59 l
601 1 l
543 1 l
h
543 59 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -174.5 656 cm
717.5 597 m
775.5 597 l
775.5 655 l
717.5 655 l
h
717.5 597 m
S
1 1 1 sc
0 i
1 0 0 -1 129.75 34.25 cm
/F1.1[ 25 0 0 -25 0 0]sf
-9.362793 9.5 m
(!)s
1 0 0 -1 143.25 20.25 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.0585938 6 m
(")s
1 0 0 -1 217.25 34.25 cm
/F1.1[ 25 0 0 -25 0 0]sf
-9.362793 9.5 m
(!)s
1 0 0 -1 230.75 20.25 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.0585938 6 m
(#)s
1 0 0 -1 304.75 34.25 cm
/F1.1[ 25 0 0 -25 0 0]sf
-9.362793 9.5 m
(!)s
1 0 0 -1 318.25 20.25 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.0585938 6 m
($)s
1 0 0 -1 392.25 34.25 cm
/F1.1[ 25 0 0 -25 0 0]sf
-9.362793 9.5 m
(!)s
1 0 0 -1 405.75 20.25 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.0585938 6 m
(%)s
1 0 0 -1 479.75 34.25 cm
/F1.1[ 25 0 0 -25 0 0]sf
-9.362793 9.5 m
(!)s
1 0 0 -1 493.25 20.25 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.0585938 6 m
(&)s
1 0 0 -1 567.25 34.25 cm
/F1.1[ 25 0 0 -25 0 0]sf
-9.362793 9.5 m
(!)s
1 0 0 -1 580.75 20.25 cm
/F1.1[ 16 0 0 -16 0 0]sf
-5.0585938 6 m
(')s
/Cs2 SC
0 sc
1 0 0 -1 46.5 241.40625 cm
/F1.1[ 25 0 0 -25 0 0]sf
-41.125488 9.5 m
(+,-./)[ 12.744141 15.515137 15.515137 24.548340 0.000000 ] xS
1 0 0 -1 46.5 100.09375 cm
-41.070557 9.5 m
(0/1-2/)[ 10.229492 13.928223 15.734863 15.515137 12.805176 0.000000 ] xS
1 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -174.5 656 cm
309 514.75 m
309 586.59998 l
S
0 i
CM
134.5 61.400002 m
137.5 69.400002 l
131.5 69.400002 l
h
134.5 61.400002 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
309 594.59998 m
312 586.59998 l
306 586.59998 l
h
309 594.59998 m
S
1 J
1 j
0.60000002 i
396.5 514.75 m
396.5 586.59998 l
S
0 i
CM
222 61.400002 m
225 69.400002 l
219 69.400002 l
h
222 61.400002 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
396.5 594.59998 m
399.5 586.59998 l
393.5 586.59998 l
h
396.5 594.59998 m
S
1 J
1 j
0.60000002 i
484 514.75 m
484 586.59998 l
S
0 i
CM
309.5 61.400002 m
312.5 69.400002 l
306.5 69.400002 l
h
309.5 61.400002 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
484 594.59998 m
487 586.59998 l
481 586.59998 l
h
484 594.59998 m
S
1 J
1 j
0.60000002 i
571.5 514.75 m
571.5 586.59998 l
S
0 i
CM
397 61.400002 m
400 69.400002 l
394 69.400002 l
h
397 61.400002 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
571.5 594.59998 m
574.5 586.59998 l
568.5 586.59998 l
h
571.5 594.59998 m
S
1 J
1 j
0.60000002 i
659 514.75 m
659 586.59998 l
S
0 i
CM
484.5 61.400002 m
487.5 69.400002 l
481.5 69.400002 l
h
484.5 61.400002 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
659 594.59998 m
662 586.59998 l
656 586.59998 l
h
659 594.59998 m
S
1 J
1 j
0.60000002 i
746.5 514.75 m
746.5 586.59998 l
S
0 i
CM
572 61.400002 m
575 69.400002 l
569 69.400002 l
h
572 61.400002 m
f
0 J
0 j
1 0 0 -1 -174.5 656 cm
746.5 594.59998 m
749.5 586.59998 l
743.5 586.59998 l
h
746.5 594.59998 m
S
ep
end
%%Trailer
%%EOF
